import logging
from datetime import datetime

from aiogram import F, Router
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from sqlalchemy import select

from app.database.db import AsyncSessionLocal
from app.database.models import Professor
from app.keyboards.schedule_kb import get_other_schedules_kb
from app.state.states import ProfessorScheduleStates
from app.utils.schedule.schedule_formatter import format_schedule_professor, escape_md_v2
from app.utils import week_mark

from app.utils.schedule.worker import get_lesson_for_professor

router = Router()
logger = logging.getLogger(__name__)


@router.callback_query(F.data == "cancel")
async def cancel(callback: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "‚óÄÔ∏è –ù–∞–∑–∞–¥" –≤ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π.

    –ü—Ä–∏ –≤—ã–∑–æ–≤–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –Ω–∞—á–∞–ª—å–Ω–æ–º—É –º–µ–Ω—é, –≥–¥–µ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å
    —Ç–∏–ø —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        callback (CallbackQuery): –û–±—ä–µ–∫—Ç –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –æ—Ç Telegram, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –¥–∞–Ω–Ω—ã–µ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏.
        state (FSMContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –¥–∏–∞–ª–æ–≥–∞.

    –õ–æ–≥–∏–∫–∞:
        - –ò–∑–º–µ–Ω—è–µ—Ç —Ç–µ–∫—Å—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–π.
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.
        - –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç callback.answer() –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è.
    """

    await callback.message.edit_text(
        text="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å:",
        reply_markup=get_other_schedules_kb()
    )
    await callback.answer()
    await state.clear()


@router.callback_query(F.data == "professor_schedule")
async def professor_schedule(callback: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.

    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–≤–æ–¥ —Ñ–∞–º–∏–ª–∏–∏ –∏ –∏–Ω–∏—Ü–∏–∞–ª–æ–≤ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.
    –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç FSM –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        callback (CallbackQuery): –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞.
        state (FSMContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –õ–æ–≥–∏–∫–∞:
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –ø–æ –≤–≤–æ–¥—É –∏–º–µ–Ω–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.
        - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥".
        - –ü–µ—Ä–µ–≤–æ–¥–∏—Ç FSM –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ `ProfessorScheduleStates.waiting_name`.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç ID —Ç–µ–∫—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è.
    """

    cancel_kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="cancel")]
        ])

    await callback.message.edit_text(
        text="üë®‚Äçüè´ –í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é –∏ –∏–Ω–∏—Ü–∏–∞–ª—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:\n\n"
             "–ù–∞–ø—Ä–∏–º–µ—Ä: `–ò–≤–∞–Ω–æ–≤ –ò\\.–ò\\.`",
        reply_markup=cancel_kb,
        parse_mode="MarkdownV2"
    )
    await callback.answer()
    await state.set_state(ProfessorScheduleStates.waiting_name)
    await state.update_data(message_id_to_delete=callback.message.message_id)


@router.message(StateFilter(ProfessorScheduleStates.waiting_name))
async def waiting_name(message: Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.

    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –∏–º–µ–Ω–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏
    –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        message (Message): –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        state (FSMContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç FSM, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –¥–∞–Ω–Ω—ã–µ, —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Ä–∞–Ω–µ–µ.

    –ü—Ä–æ–≤–µ—Ä–∫–∞:
        - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –∏–º—è –Ω–µ –∫–æ—Ä–æ—á–µ 3 —Å–∏–º–≤–æ–ª–æ–≤ –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ö–æ—Ç—è –±—ã –æ–¥–Ω—É –±—É–∫–≤—É.
        - –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ ‚Äî —Å–æ–æ–±—â–∞–µ—Ç –æ–± –æ—à–∏–±–∫–µ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –≤–≤–æ–¥.

    –õ–æ–≥–∏–∫–∞:
        - –£–¥–∞–ª—è–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –µ–≥–æ ID.
        - –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –≤ FSM.
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.
    """

    data = await state.get_data()
    message_id_to_delete = data.get("message_id_to_delete")
    if message_id_to_delete:
        try:
            await message.bot.delete_message(chat_id=message.chat.id, message_id=message_id_to_delete)
        except Exception as e:
            logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

    name = message.text.strip()

    async with AsyncSessionLocal() as session:
        result = await session.execute(
            select(Professor).where(Professor.name.ilike(f"%{name}%"))
        )

    professor = result.scalars().first()
    if not professor:
        await message.answer(
            text=f"‚ùå –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å `{name}` –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö\\.\n\n"
                 "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞\\.",
            reply_markup=get_other_schedules_kb(),
            parse_mode="MarkdownV2"
        )
        return

    await state.update_data(professor_name=name)

    schedule_type_kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üìÖ –°–µ–≥–æ–¥–Ω—è", callback_data=f"prof_today:{name}"),
            ],
            [
                InlineKeyboardButton(text="‚ûï –ù–µ–¥–µ–ª—è", callback_data=f"prof_week_plus:{name}"),
                InlineKeyboardButton(text="‚ûñ –ù–µ–¥–µ–ª—è", callback_data=f"prof_week_minus:{name}"),
            ],
            [
                InlineKeyboardButton(text="üóì –í—Å—è –Ω–µ–¥–µ–ª—è", callback_data=f"prof_week_full:{name}"),
            ],
            [
                InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="cancel")
            ]
        ]
    )

    await message.answer(
        text=f"üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: `{name}`\n\n"
             "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:",
        reply_markup=schedule_type_kb,
        parse_mode="MarkdownV2"
    )


@router.callback_query(F.data.startswith("prof_today:"))
async def handle_professor_today(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫–∞–∑–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å.

    –ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ñ–∞–º–∏–ª–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏–∑ callback data, –ø–æ–ª—É—á–∞–µ—Ç –µ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ,
    —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç –∑–∞–Ω—è—Ç–∏—è –ø–æ —Ç–µ–∫—É—â–µ–º—É –¥–Ω—é –Ω–µ–¥–µ–ª–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        callback (CallbackQuery): Callback-–∑–∞–ø—Ä–æ—Å, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∏–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ "prof_today:–§–∞–º–∏–ª–∏—è –ò.–û.".

    –õ–æ–≥–∏–∫–∞:
        1. –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏.
        2. –ü–æ–ª—É—á–∞–µ—Ç –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ –∑–∞–Ω—è—Ç–∏—è —Å –ø–æ–º–æ—â—å—é `get_lesson_for_professor`.
        3. –§–∏–ª—å—Ç—Ä—É–µ—Ç –∑–∞–Ω—è—Ç–∏—è –ø–æ —Ç–µ–∫—É—â–µ–º—É –¥–Ω—é –∏ –ø—Ä–∏–∑–Ω–∞–∫—É –Ω–µ–¥–µ–ª–∏ (`plus`/`minus`/`every`).
        4. –§–æ—Ä–º–∏—Ä—É–µ—Ç –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º.
        5. –£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ (–∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ, –µ—Å–ª–∏ –Ω–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è).
        6. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± –∏—Ö –ø—Ä–∏—á–∏–Ω–∞—Ö.

    –ò—Å–∫–ª—é—á–µ–Ω–∏—è:
        Exception: –ü—Ä–∏ –æ—à–∏–±–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–ª–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.
    """

    professor_name = ""
    try:
        professor_name = callback.data.split(":")[1]
        current_weekday = datetime.now().isoweekday()

        professor, all_lessons = await get_lesson_for_professor(professor_name)

        if not professor:
            await callback.message.edit_text(f"‚ùå –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å {professor_name} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            await callback.answer()
            return

        if not all_lessons:
            await callback.message.edit_text(f"‚ùå –ù–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è {professor_name}.")
            await callback.answer()
            return

        today_lessons = [lesson for lesson in all_lessons if lesson.weekday == current_weekday]

        current_week = week_mark.WEEK_MARK_TXT
        week_filter = "plus" if current_week == "plus" else "minus"

        filtered_lessons = [
            lesson for lesson in today_lessons
            if lesson.week_mark in (week_filter, "every", None)
        ]

        if not filtered_lessons:
            weekday_names = {
                1: "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", 2: "–í—Ç–æ—Ä–Ω–∏–∫", 3: "–°—Ä–µ–¥–∞",
                4: "–ß–µ—Ç–≤–µ—Ä–≥", 5: "–ü—è—Ç–Ω–∏—Ü–∞", 6: "–°—É–±–±–æ—Ç–∞", 7: "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"
            }

            new_text = (f"üë®‚Äçüè´ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ {escape_md_v2(professor.name)}\n"
                        f"üìÖ *{weekday_names[current_weekday]}*\n\n"
                        f"–°–µ–≥–æ–¥–Ω—è –ø–∞—Ä –Ω–µ—Ç\\.")

            try:
                await callback.message.edit_text(
                    text=new_text,
                    reply_markup=callback.message.reply_markup,
                    parse_mode="MarkdownV2"
                )
            except Exception as edit_error:
                if "message is not modified" in str(edit_error):
                    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
                    pass
                else:
                    raise edit_error

            await callback.answer(f"–°–µ–≥–æ–¥–Ω—è –Ω–µ—Ç –ø–∞—Ä —É {professor.name}")
            return

        header_prefix = f"üë®‚Äçüè´ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ {professor.name} –Ω–∞ —Å–µ–≥–æ–¥–Ω—è"
        messages = format_schedule_professor(
            filtered_lessons,
            week=week_filter,
            header_prefix=header_prefix
        )

        await callback.message.delete()

        if messages:
            if len(messages) > 1:
                logger.warning(f"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è {professor_name} –Ω–µ —É–º–µ—Å—Ç–∏–ª–æ—Å—å –≤ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å!!!")

            for i, msg_text in enumerate(messages):
                is_last = (i == len(messages) - 1)
                await callback.message.answer(
                    msg_text,
                    reply_markup=callback.message.reply_markup if is_last else None,
                    parse_mode="MarkdownV2",
                    disable_web_page_preview=True
                )

            await callback.answer(f"üìÖ –°–µ–≥–æ–¥–Ω—è {week_mark.WEEK_MARK_STICKER}")
        else:
            await callback.message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.")
            await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è {professor_name}: {e}.")
        await callback.message.edit_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è {professor_name}")
        await callback.answer()


@router.callback_query(F.data.startswith("prof_week_"))
async def handle_professor_week(callback: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫–∞–∑–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–∞ –Ω–µ–¥–µ–ª—é.

    –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ (‚ûï –Ω–µ–¥–µ–ª—è, ‚ûñ –Ω–µ–¥–µ–ª—è –∏–ª–∏ –≤—Å—è –Ω–µ–¥–µ–ª—è)
    —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        callback (CallbackQuery): Callback-–∑–∞–ø—Ä–æ—Å —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "prof_week_[—Ç–∏–ø]:–§–∞–º–∏–ª–∏—è –ò.–û.".
            –ì–¥–µ —Ç–∏–ø –º–æ–∂–µ—Ç –±—ã—Ç—å "plus", "minus" –∏–ª–∏ "full".

    –õ–æ–≥–∏–∫–∞:
        1. –ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–∏–ø –Ω–µ–¥–µ–ª–∏ –∏ –∏–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏–∑ callback data.
        2. –ü–æ–ª—É—á–∞–µ—Ç –∑–∞–Ω—è—Ç–∏—è —á–µ—Ä–µ–∑ `get_lesson_for_professor`.
        3. –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –Ω–µ–¥–µ–ª–∏.
        4. –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º.

    –ò—Å–∫–ª—é—á–µ–Ω–∏—è:
        Exception: –ü—Ä–∏ –æ—à–∏–±–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–ª–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.
    """

    professor_name = ""
    try:
        data_parts = callback.data.split(":")
        week_type = data_parts[0].replace("prof_week_", "")
        professor_name = data_parts[1]

        professor, lessons = await get_lesson_for_professor(professor_name)

        if not professor:
            await callback.message.edit_text(f"‚ùå –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å {professor} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            await callback.answer()
            return

        if not lessons:
            await callback.message.edit_text(f"‚ùå –ù–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è {professor_name}")
            await callback.answer()
            return

        week_names = {
            "plus": "‚ûï –ù–µ–¥–µ–ª—è",
            "minus": "‚ûñ –ù–µ–¥–µ–ª—è",
            "full": "üóì –í—Å—è –Ω–µ–¥–µ–ª—è"
        }

        messages = format_schedule_professor(
            lessons,
            week=week_type,
            header_prefix=f"üë®‚Äçüè´ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ {professor.name} –Ω–∞ –Ω–µ–¥–µ–ª—é"
        )

        await callback.message.delete()

        if messages:
            if len(messages) > 1:
                logger.warning(f"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è {professor_name} –Ω–µ —É–º–µ—Å—Ç–∏–ª–æ—Å—å –≤ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å!!!")

            for i, msg_text in enumerate(messages):
                is_last = (i == len(messages) - 1)
                await callback.message.answer(
                    msg_text,
                    reply_markup=callback.message.reply_markup if is_last else None,
                    parse_mode="MarkdownV2",
                    disable_web_page_preview=True
                )

            await callback.answer(week_names.get(week_type, "üóì –ù–µ–¥–µ–ª—è"))
        else:
            await callback.message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.")
            await callback.answer()

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫–∞–∑–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è {professor_name}: {e}.")
        await callback.message.edit_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è {professor_name}")
        await callback.answer()