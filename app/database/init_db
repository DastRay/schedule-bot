-- Таблица факультетов
CREATE TABLE faculties (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL UNIQUE
);

-- Таблица групп
CREATE TABLE groups (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    group_name TEXT NOT NULL UNIQUE,
    faculty_id INTEGER,
    FOREIGN KEY (faculty_id) REFERENCES faculties(id) ON DELETE SET NULL
);

-- Таблица временных слотов (пары)
CREATE TABLE timeslots (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    lesson_number INTEGER NOT NULL,
    start_time TEXT NOT NULL,   -- SQLite хранит TIME как строку "HH:MM:SS"
    end_time TEXT NOT NULL,
    source_hash TEXT,
    UNIQUE (lesson_number, start_time, end_time)
);

-- Таблица занятий
CREATE TABLE lessons (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    group_id INTEGER NOT NULL,
    date TEXT,                   -- SQLite хранит DATE как ISO-строку "YYYY-MM-DD"
    weekday INTEGER,
    lesson_number INTEGER,
    start_time TEXT,
    end_time TEXT,
    subject TEXT,
    professors TEXT,
    rooms TEXT,
    week_mark TEXT,              -- Заменено ENUM -> TEXT
    type TEXT,
    created_at TEXT DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (group_id) REFERENCES groups(id) ON DELETE CASCADE,
    UNIQUE (
        group_id,
        weekday,
        lesson_number,
        subject,
        professors,
        rooms,
        week_mark,
        type,
        start_time,
        end_time
    )
);

-- Индексы для ускорения выборок
CREATE INDEX idx_groups_name ON groups(group_name);
CREATE INDEX idx_lessons_group_id ON lessons(group_id);
CREATE INDEX idx_lessons_date ON lessons(date);
CREATE INDEX idx_lessons_weekday ON lessons(weekday);