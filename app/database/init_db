CREATE DATABASE "TimetableTvSU_db"
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'ru_RU.UTF-8'
    LC_CTYPE = 'ru_RU.UTF-8'
    TEMPLATE = template0
    CONNECTION LIMIT = -1;

\c "TimetableTvSU_db";

-- Таблица факультетов
CREATE TABLE faculties (
    id SERIAL PRIMARY KEY,
    name VARCHAR NOT NULL UNIQUE
);

-- Таблица групп
CREATE TABLE groups (
    id SERIAL PRIMARY KEY,
    group_name VARCHAR NOT NULL UNIQUE,
    faculty_id INT REFERENCES faculties(id) ON DELETE SET NULL
);

-- Таблица пар
CREATE TABLE timeslots (
    id SERIAL PRIMARY KEY,
    lesson_number INT NOT NULL,
    start_time TIME NOT NULL,
    end_time TIME NOT NULL,
    source_hash VARCHAR,
    CONSTRAINT uq_timeslot UNIQUE (lesson_number, start_time, end_time)
);

-- Перечисление для weekMark
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'weekmarkenum') THEN
        CREATE TYPE weekmarkenum AS ENUM ('every', 'plus', 'minus');
    END IF;
END$$;

-- Таблица пар
CREATE TABLE lessons (
    id SERIAL PRIMARY KEY,
    group_id INT NOT NULL REFERENCES groups(id) ON DELETE CASCADE,
    date DATE,                       -- конкретная дата (если есть)
    weekday INT,                     -- день недели (1=Пн ... 7=Вс)
    lesson_number INT,               -- номер пары
    start_time TIME,                 -- время начала
    end_time TIME,                   -- время конца
    subject TEXT,                    -- название предмета
    professors TEXT,                  -- преподаватель
    rooms TEXT,                      -- аудитория
    week_mark weekmarkenum,          -- "every", "plus", "minus"
    type VARCHAR,                    -- тип расписания (classes/exams/...)
    created_at TIMESTAMPTZ DEFAULT now(),
    raw_json JSONB,                  -- оригинальные данные для отладки
CONSTRAINT uq_lesson_unique UNIQUE (
    group_id,
    weekday,
    lesson_number,
    subject,
    professors,
    rooms,
    week_mark,
    type,
    start_time,
    end_time
);

-- Индексы ускорения поиска
CREATE INDEX idx_groups_name ON groups(group_name);
CREATE INDEX idx_lessons_group_id ON lessons(group_id);
CREATE INDEX idx_lessons_date ON lessons(date);
CREATE INDEX idx_lessons_weekday ON lessons(weekday);